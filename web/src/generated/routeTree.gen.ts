/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './../routes/__root'
import { Route as LayoutImport } from './../routes/_layout'
import { Route as RegistrationRouteImport } from './../routes/registration/route'
import { Route as LoginRouteImport } from './../routes/login/route'
import { Route as CreateRouteImport } from './../routes/create/route'
import { Route as LayoutMypageRouteImport } from './../routes/_layout/mypage/route'
import { Route as LayoutEventsRouteImport } from './../routes/_layout/events/route'
import { Route as LayoutMypageIndexImport } from './../routes/_layout/mypage/index'
import { Route as LayoutMypageGroupsRouteImport } from './../routes/_layout/mypage/groups/route'
import { Route as LayoutGroupsCreateRouteImport } from './../routes/_layout/groups_/create/route'
import { Route as LayoutGroupsGroupIdRouteImport } from './../routes/_layout/groups_/$groupId/route'
import { Route as LayoutEventsCreateRouteImport } from './../routes/_layout/events_/create/route'
import { Route as LayoutEventsEventIdRouteImport } from './../routes/_layout/events_/$eventId/route'

// Create Virtual Routes

const LayoutMypageFollowsRouteLazyImport = createFileRoute(
  '/_layout/mypage/follows',
)()
const LayoutMypageEventsRouteLazyImport = createFileRoute(
  '/_layout/mypage/events',
)()
const LayoutMypageAccountRouteLazyImport = createFileRoute(
  '/_layout/mypage/account',
)()

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const RegistrationRouteRoute = RegistrationRouteImport.update({
  path: '/registration',
  getParentRoute: () => rootRoute,
} as any)

const LoginRouteRoute = LoginRouteImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const CreateRouteRoute = CreateRouteImport.update({
  path: '/create',
  getParentRoute: () => rootRoute,
} as any)

const LayoutMypageRouteRoute = LayoutMypageRouteImport.update({
  path: '/mypage',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutEventsRouteRoute = LayoutEventsRouteImport.update({
  path: '/events',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutMypageIndexRoute = LayoutMypageIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutMypageRouteRoute,
} as any)

const LayoutMypageFollowsRouteLazyRoute =
  LayoutMypageFollowsRouteLazyImport.update({
    path: '/follows',
    getParentRoute: () => LayoutMypageRouteRoute,
  } as any).lazy(() =>
    import('./../routes/_layout/mypage/follows/route.lazy').then(
      (d) => d.Route,
    ),
  )

const LayoutMypageEventsRouteLazyRoute =
  LayoutMypageEventsRouteLazyImport.update({
    path: '/events',
    getParentRoute: () => LayoutMypageRouteRoute,
  } as any).lazy(() =>
    import('./../routes/_layout/mypage/events/route.lazy').then((d) => d.Route),
  )

const LayoutMypageAccountRouteLazyRoute =
  LayoutMypageAccountRouteLazyImport.update({
    path: '/account',
    getParentRoute: () => LayoutMypageRouteRoute,
  } as any).lazy(() =>
    import('./../routes/_layout/mypage/account/route.lazy').then(
      (d) => d.Route,
    ),
  )

const LayoutMypageGroupsRouteRoute = LayoutMypageGroupsRouteImport.update({
  path: '/groups',
  getParentRoute: () => LayoutMypageRouteRoute,
} as any)

const LayoutGroupsCreateRouteRoute = LayoutGroupsCreateRouteImport.update({
  path: '/groups/create',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./../routes/_layout/groups_/create/route.lazy').then((d) => d.Route),
)

const LayoutGroupsGroupIdRouteRoute = LayoutGroupsGroupIdRouteImport.update({
  path: '/groups/$groupId',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutEventsCreateRouteRoute = LayoutEventsCreateRouteImport.update({
  path: '/events/create',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutEventsEventIdRouteRoute = LayoutEventsEventIdRouteImport.update({
  path: '/events/$eventId',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/create': {
      preLoaderRoute: typeof CreateRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRoute
    }
    '/registration': {
      preLoaderRoute: typeof RegistrationRouteImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/events': {
      preLoaderRoute: typeof LayoutEventsRouteImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/mypage': {
      preLoaderRoute: typeof LayoutMypageRouteImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/events/$eventId': {
      preLoaderRoute: typeof LayoutEventsEventIdRouteImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/events/create': {
      preLoaderRoute: typeof LayoutEventsCreateRouteImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/groups/$groupId': {
      preLoaderRoute: typeof LayoutGroupsGroupIdRouteImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/groups/create': {
      preLoaderRoute: typeof LayoutGroupsCreateRouteImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/mypage/groups': {
      preLoaderRoute: typeof LayoutMypageGroupsRouteImport
      parentRoute: typeof LayoutMypageRouteImport
    }
    '/_layout/mypage/account': {
      preLoaderRoute: typeof LayoutMypageAccountRouteLazyImport
      parentRoute: typeof LayoutMypageRouteImport
    }
    '/_layout/mypage/events': {
      preLoaderRoute: typeof LayoutMypageEventsRouteLazyImport
      parentRoute: typeof LayoutMypageRouteImport
    }
    '/_layout/mypage/follows': {
      preLoaderRoute: typeof LayoutMypageFollowsRouteLazyImport
      parentRoute: typeof LayoutMypageRouteImport
    }
    '/_layout/mypage/': {
      preLoaderRoute: typeof LayoutMypageIndexImport
      parentRoute: typeof LayoutMypageRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  CreateRouteRoute,
  LoginRouteRoute,
  RegistrationRouteRoute,
  LayoutRoute.addChildren([
    LayoutEventsRouteRoute,
    LayoutMypageRouteRoute.addChildren([
      LayoutMypageGroupsRouteRoute,
      LayoutMypageAccountRouteLazyRoute,
      LayoutMypageEventsRouteLazyRoute,
      LayoutMypageFollowsRouteLazyRoute,
      LayoutMypageIndexRoute,
    ]),
    LayoutEventsEventIdRouteRoute,
    LayoutEventsCreateRouteRoute,
    LayoutGroupsGroupIdRouteRoute,
    LayoutGroupsCreateRouteRoute,
  ]),
])

/* prettier-ignore-end */
