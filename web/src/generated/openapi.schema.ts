/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/registration": {
    /** 新規登録 */
    post: operations["UserRegistrationController_registerNewUser"];
  };
  "/api/users": {
    post: operations["UserController_createUser"];
  };
  "/api/auth/login": {
    post: operations["AuthenticationController_login"];
  };
  "/api/auth/logout": {
    /** ログアウト */
    post: operations["AuthenticationController_logout"];
  };
  "/api/mypage/account": {
    get: operations["FetchAccountSettingsController_handle"];
  };
  "/api/groups": {
    post: operations["CreateGroupController_handle"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    UnprocessableEntityItemDto: {
      property: string;
      message: string;
    };
    UnprocessableEntityDto: {
      /** @enum {number} */
      statusCode: 422;
      message: components["schemas"]["UnprocessableEntityItemDto"][];
    };
    BadRequestResponseDto: {
      /** @enum {number} */
      statusCode: 400;
      message: string;
    };
    RegisterNewUserRequestDto: {
      /** @description メールアドレス */
      email: string;
      /** @description パスワード */
      password: string;
      /** @description パスワード（確認） */
      passwordConfirmation: string;
    };
    RegisterNewUserResponseDto: {
      /** @description ユーザ登録ID */
      userRegistrationId: string;
    };
    CreateUserRequestDto: {
      userRegistrationId: string;
      userName: string;
    };
    LoginRequestDto: {
      email: string;
      password: string;
    };
    InternalServerErrorDto: {
      /** @enum {number} */
      statusCode: 500;
      message: string;
    };
    ForbiddenDto: {
      /** @enum {number} */
      statusCode: 403;
      message: string;
    };
    FetchAccountSettingsResponseDto: {
      /** @description ユーザ名 */
      userName: string;
      /** @description メールアドレス */
      email: string;
    };
    CreateGroupRequestDto: {
      /** @description グループ名 */
      name: string;
      /** @description 詳細 */
      description: string;
    };
    CreateGroupResponseDto: {
      /** @description グループID */
      groupId: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** 新規登録 */
  UserRegistrationController_registerNewUser: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["RegisterNewUserRequestDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["RegisterNewUserResponseDto"];
        };
      };
      /** @description Bad request. */
      400: {
        content: {
          "application/json": components["schemas"]["BadRequestResponseDto"];
        };
      };
      /** @description Validation error. */
      422: {
        content: {
          "application/json": components["schemas"]["UnprocessableEntityDto"];
        };
      };
    };
  };
  UserController_createUser: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateUserRequestDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  AuthenticationController_login: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LoginRequestDto"];
      };
    };
    responses: {
      204: {
        content: never;
      };
      /** @description Validation error. */
      422: {
        content: {
          "application/json": components["schemas"]["UnprocessableEntityDto"];
        };
      };
    };
  };
  /** ログアウト */
  AuthenticationController_logout: {
    responses: {
      204: {
        content: never;
      };
    };
  };
  FetchAccountSettingsController_handle: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FetchAccountSettingsResponseDto"];
        };
      };
      /** @description Forbidden. */
      403: {
        content: {
          "application/json": components["schemas"]["ForbiddenDto"];
        };
      };
      /** @description Internal server error. */
      500: {
        content: {
          "application/json": components["schemas"]["InternalServerErrorDto"];
        };
      };
    };
  };
  CreateGroupController_handle: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateGroupRequestDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["CreateGroupResponseDto"];
        };
      };
      /** @description Bad request. */
      400: {
        content: {
          "application/json": components["schemas"]["BadRequestResponseDto"];
        };
      };
      /** @description Validation error. */
      422: {
        content: {
          "application/json": components["schemas"]["UnprocessableEntityDto"];
        };
      };
    };
  };
}
